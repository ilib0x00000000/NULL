# -*- coding:utf-8 -*-


"""
Django settings for courseonline project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import sys
import logging

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.join(BASE_DIR, 'apps'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kx@f$fnf9rh9a(bh_lzx3em&9czl^$_9et5zfhn5x43ysex%0@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = [
    '*',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'courses',
    'orgzation',
    'operation',
    'tests',
    'core',

    'xadmin',           # 第三方扩展包-----后台管理  https://github.com/sshwsfc/xadmin
    'crispy_forms',     # xadmin依赖包
    'captcha',          # 第三方扩展包-----验证码    https://github.com/mbi/django-simple-captcha
    'pure_pagination',  # 第三方扩展包-----分页      https://github.com/jamespacileo/django-pure-pagination
    'DjangoUeditor',    # 第三方扩展包-----富文本    https://github.com/zhangfisher/DjangoUeditor
]

# 继承自带的User时
AUTH_USER_MODEL = 'users.UserProfile'
# 自定义用户登录校验时



MIDDLEWARE_CLASSES = [
    # 'django.middleware.cache.UpdateCacheMiddleware',    # django自带的全站缓存中间件
    'utils.middleware.FlowStatisticsMiddleware',        # 自定义流量统计
    'utils.middleware.DisableSpiderMiddleware',         # 自定义反爬虫中间件
    'utils.middleware.DoNotTrackMiddleware',            # 自定义DNT中间件
    'utils.middleware.LogReferMiddleware',              # 自定义记录请求refer中间件
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'utils.middleware.AdminAccessIPWhiteListMiddleware',  # 自定义白名单中间件
    # 'django.middleware.cache.FetchFromCacheMiddleware',   # django自带的全站缓存中间件
]

ROOT_URLCONF = 'courseonline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'courseonline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default' : {
        'ENGINE' : 'django.db.backends.mysql',
        'NAME' : 'course',
        'USER' : 'root',
        'PASSWORD' : '123456',
        'HOST' : 'localhost',
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 修改

TIME_ZONE = 'Asia/Shanghai'  # 修改

USE_I18N = True
USE_L10N = True

# 修改
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# 新增
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# QQ邮箱配置   参考链接 http://www.jianshu.com/p/5c30ff053381
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = '965838596@qq.com'
EMAIL_USE_SSL = False
EMAIL_HOST_PASSWORD = 'eqzbhatfdufbbgba'
EMAIL_USE_TLS = True
EMAIL_FROM = '965838596@qq.com'

# 新浪邮箱设置
# EMAIL_HOST = 'smtp.sina.cn'
# EMAIL_PORT = 25
# EMAIL_HOST_USER = '15829208975@sina.cn'
# EMAIL_HOST_PASSWORD = 'zyh15829208975'
# EMAIL_USE_TLS = False
# EMAIL_FROM = '15829208975@sina.cn'

# 文件上传配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# 分页配置
PAGINATION_SETTINGS = {
    'PAGE_RANGE_DISPLAYED': 10,
    'MARGIN_PAGES_DISPLAYED': 2,
    'SHOW_FIRST_PAGE_WHEN_INVALID': True,
}

# 宏定义
JSON_TYPE = 'application/json'

'''
在DEBUG设置为False时，Django会认为已经部署在生成环境，所以不再代理静态文件的传输
这时需要交给Apache/Nginx来处理静态文件或者自己定义静态文件的处理视图
此时需要新增配置 STATIC_ROOT
'''
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# 日志
LOGGING_ROOT = os.path.join(BASE_DIR, 'log')

# 中间件
ADMIN_ACCESS_WHITELIST_ENABLED = True

# 缓存
# windows安装memcached http://www.cnblogs.com/Li-Cheng/p/4392294.html
# 链接：http://pan.baidu.com/s/1nu96m97 密码：tmnn
# 使用memcached做缓存
# CACHES = {
#     'default' : {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': [
#             '127.0.0.1:11211',
#         ]
#     }
# }

# 使用数据库做缓存
# 设置完数据库缓存之后执行 createcachetable 表名
CACHES = {
    'default' : {
        'BACKEND' : 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION' : 'cache_for_django',
    }
}

# 日志
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S',
    filename= os.path.join(LOGGING_ROOT, 'flows.log'),
    filemode='a'
)
FLOW_LOGGER = logging.getLogger(__file__ + 'flow')
